/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.23
 * Generated at: 2024-05-15 17:23:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class addPayment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/newproject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/BusTicket/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c.tld", Long.valueOf(1664433678000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1715450746397L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assests/css/1adminlogin.css\"> \r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assests/css/Header.css\"> \r\n");
      out.write("     <link rel=\"stylesheet\" href=\"assests/css/paymentform.css.css\"> \r\n");
      out.write("    <meta charset=\"ISO-8859-1\">\r\n");
      out.write("    <title>Home Page</title>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("       \r\n");
      out.write("    /* Style the <nav> element */\r\n");
      out.write("    nav {\r\n");
      out.write("        background-color: blue; /* Background color for the navigation bar */\r\n");
      out.write("        padding: 10px; /* Add padding for spacing */\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* Style the <ul> element (unordered list) within the navigation */\r\n");
      out.write("    ul {\r\n");
      out.write("        list-style-type: none; /* Remove default list bullets */\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        display: flex; /* Display list items as flex items */\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* Style the list items (<li>) */\r\n");
      out.write("    li {\r\n");
      out.write("        margin-right: 5px; /* Add some space between list items */\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* Style the anchor links (<a>) */\r\n");
      out.write("    li a {\r\n");
      out.write("        text-decoration: none; /* Remove underline from anchor links */\r\n");
      out.write("        color: red; /* Text color for the links */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* Style the form button */\r\n");
      out.write("    input[type=\"submit\"] {\r\n");
      out.write("        background-color: #ffcc00; /* Button background color */\r\n");
      out.write("        color: #333; /* Button text color */\r\n");
      out.write("        border: none; /* Remove button border */\r\n");
      out.write("        padding: 8px 16px; /* Add padding to the button */\r\n");
      out.write("        cursor: pointer; /* Change cursor to a pointer on hover */\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* Style the form button on hover */\r\n");
      out.write("    input[type=\"submit\"]:hover {\r\n");
      out.write("        background-color: #ff9900; /* Change button background color on hover */\r\n");
      out.write("        color: #fff; /* Change button text color on hover */\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("     .header-bar {\r\n");
      out.write("            background-color: #333;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 10px 0;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .header-bar a {\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            margin: 0 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .header-bar a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("         .footer {\r\n");
      out.write("            background-color: #333;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        .footer img {\r\n");
      out.write("            margin: 0 10px;\r\n");
      out.write("            width: 40px;\r\n");
      out.write("            height: 40px;\r\n");
      out.write("            animation: bounce 1s infinite alternate;\r\n");
      out.write("        }\r\n");
      out.write("        @keyframes bounce {\r\n");
      out.write("            0% {\r\n");
      out.write("                transform: translateY(0);\r\n");
      out.write("            }\r\n");
      out.write("            100% {\r\n");
      out.write("                transform: translateY(-10px);\r\n");
      out.write("            }\r\n");
      out.write("</style>\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function showAlertAndRedirect(message, destination) {\r\n");
      out.write("            // Show an alert message\r\n");
      out.write("            alert(message);\r\n");
      out.write("\r\n");
      out.write("            // Redirect to the specified destination\r\n");
      out.write("            window.location.href = destination;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function validateForm() {\r\n");
      out.write("            // Get form input values\r\n");
      out.write("            var method = document.forms[\"paymentForm\"][\"method\"].value;\r\n");
      out.write("            var name = document.forms[\"paymentForm\"][\"name\"].value;\r\n");
      out.write("            var cardnumber = document.forms[\"paymentForm\"][\"cardnumber\"].value;\r\n");
      out.write("            var exp = document.forms[\"paymentForm\"][\"exp\"].value;\r\n");
      out.write("            var cvc = document.forms[\"paymentForm\"][\"cvc\"].value;\r\n");
      out.write("\r\n");
      out.write("            // Check if any of the fields are empty\r\n");
      out.write("            if (method === \"\" || name === \"\" || cardnumber === \"\" || exp === \"\" || cvc === \"\") {\r\n");
      out.write("                showAlertAndRedirect(\"Payment was unsuccessful. Please fill in all fields.\", \"index.jsp\");\r\n");
      out.write("                return false; // Prevent form submission\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // If all fields are filled, you can show the success message here\r\n");
      out.write("            alert(\"Payment was successful.\");\r\n");
      out.write("\r\n");
      out.write("            // Continue with the form submission\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <!--=======================Header Start=======================-->\r\n");
      out.write("    <div class=\"header-bar\">\r\n");
      out.write("    <a href=\"#\">Login</a>\r\n");
      out.write("    <a href=\"#\">Terms and Conditions</a>\r\n");
      out.write("    <a href=\"#\">FAQ</a>\r\n");
      out.write("    <a href=\"#\">Support</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("    <!--=======================Header End=======================-->\r\n");
      out.write("\r\n");
      out.write("    <!-- Your form with required fields -->\r\n");
      out.write("    <div class=\"container p-0\">\r\n");
      out.write("        <div class=\"card px-4\">\r\n");
      out.write("            <p class=\"h8 py-3\">Payment Details</p>\r\n");
      out.write("            <form name=\"paymentForm\" action=\"addPayment\" method=\"post\" onsubmit=\"return validateForm()\">\r\n");
      out.write("                <!-- Payment Method -->\r\n");
      out.write("                <div class=\"col-12\">\r\n");
      out.write("                    <div class=\"d-flex flex-column\">\r\n");
      out.write("                        <p class=\"text mb-1\">Payment Method</p>\r\n");
      out.write("                        <input class=\"form-control mb-3\" type=\"text\" name=\"method\" placeholder=\"Visa / Master\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Person Name -->\r\n");
      out.write("                <div class=\"col-12\">\r\n");
      out.write("                    <div class=\"d-flex flex-column\">\r\n");
      out.write("                        <p class=\"text mb-1\">Person Name</p>\r\n");
      out.write("                        <input class=\"form-control mb-3\" type=\"text\" name=\"name\" placeholder=\"Name\" required>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Card Number -->\r\n");
      out.write("                <div class=\"col-12\">\r\n");
      out.write("                    <div class=\"d-flex flex-column\">\r\n");
      out.write("                        <p class=\"text mb-1\">Card Number</p>\r\n");
      out.write("                        <input class=\"form-control mb-3\" type=\"text\" name=\"cardnumber\" placeholder=\"1234 5678 435678\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Expiry -->\r\n");
      out.write("                <div class=\"col-6\">\r\n");
      out.write("                    <div class=\"d-flex flex-column\">\r\n");
      out.write("                        <p class=\"text mb-1\">Expiry</p>\r\n");
      out.write("                        <input class=\"form-control mb-3\" type=\"text\" name=\"exp\" placeholder=\"MM/YYYY\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- CVV/CVC -->\r\n");
      out.write("                <div class=\"col-6\">\r\n");
      out.write("                    <div class=\"d-flex flex-column\">\r\n");
      out.write("                        <p class=\"text mb-1\">CVV/CVC</p>\r\n");
      out.write("                        <input class=\"form-control mb-3 pt-2\" type=\"password\" name=\"cvc\" placeholder=\"***\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div><br><br>\r\n");
      out.write("\r\n");
      out.write("                <!-- Submit Button -->\r\n");
      out.write("                <div class=\"col-12\">\r\n");
      out.write("                    <div class=\"d-flex flex-column\">\r\n");
      out.write("                        <input type=\"submit\" class=\"btn btn-primary mb-3\" name=\"submit\" value=\"Add Payment Details\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"footer\">\r\n");
      out.write("   \r\n");
      out.write("    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/MasterCard_Logo.svg/1200px-MasterCard_Logo.svg.png\" alt=\"Mastercard\">\r\n");
      out.write("    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/PayPal.svg/1200px-PayPal.svg.png\" alt=\"PayPal\">\r\n");
      out.write("    <!-- Add more payment method icons as needed -->\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
